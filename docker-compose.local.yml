services:
  aphrodite:
    build:
      context: ./aphrodite
      dockerfile: Dockerfile
    container_name: aphrodite
    restart: always
    ports:
      - 5000:80
    env_file:
      - ./aphrodite/.env
    depends_on:
      - chronos

  chronos:
    build:
      context: ./chronos
      dockerfile: Dockerfile
    container_name: chronos
    restart: always
    ports:
      - 8080:8000
    env_file:
      - ./chronos/.env
    depends_on:
      - rabbitmq

  hermes:
    build:
      context: ./hermes
      dockerfile: Dockerfile
    deploy:
      replicas: 4
      restart_policy:
        condition: any

    env_file:
      - ./hermes/.env
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."

volumes:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local
  ollama_volume:
    driver: local
